void dfs(int src,int p){
	d[src]=d[p]+1;
	par[src][0]=p;
	for(int i=0;i<(int)gr[src].size();++i){
		int ver=gr[src][i];
		if(ver==p) continue;
		dfs(ver,src);
	}
}
void pre(){
	for(int i=1;i<=n;++i) 
		for(int j=1;j<=19;++j)            // not upto 0 and bit should be 2nd loop
		par[i][j]=par[par[i][j-1]][j-1];
	
}
int lca(int u,int v){
	if(d[u]>d[v]) swap(u,v);
	int dis=d[v]-d[u];
	
	
	for(int i=0;i<=19;++i)
		if(dis&(1<<i))
			v=par[v][i];
		
	if(u==v) return u;
	
	for(int i=19;i>=0;--i){
		if(par[u][i]!=par[v][i]){
			u=par[u][i];
			v=par[v][i];
		}
	}
	return par[u][0];
	
}

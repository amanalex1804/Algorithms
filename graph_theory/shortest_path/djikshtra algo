#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int>P;
vector<P>V[1000];
int nodes,dis[10000],vis[10000]={0},weigh,ver,v,i,ww;
void dijkshtra()
{
    fill(dis,dis+10000,999);
    dis[1]=0;
    multiset<P>S;
    S.insert(make_pair(0,1));

    while(!S.empty())
    {
        P p;
        p=*S.begin();

        S.erase(S.begin());

        ver=p.second;
        if(vis[ver]==1) continue;
        vis[ver]=1;
        for(i=0;i<V[ver].size();++i)
        {
            v=V[ver][i].first;
            ww=V[ver][i].second;
            if(dis[ver]+ww<dis[v])
            {

             dis[v]=dis[ver]+ww;

             S.insert(make_pair(dis[v],v));

                                }
        }
    }
    for(i=2;i<=nodes;++i) cout<<dis[i]<<" ";
}
int main()
{
    int edge,wt,x,y;
    cin>>nodes>>edge;
    for(i=0;i<edge;++i)
    {
        cin>>x>>y>>wt;
        V[x].push_back(make_pair(y,wt));
        V[y].push_back(make_pair(x,wt));
    }

    dijkshtra();


    return 0;
}

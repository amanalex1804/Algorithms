#include<bits/stdc++.h>
using namespace std;
// to find sum between intervals
int A[1000],seg[10000],ind,val;
void build(int node,int st,int en)
{
if(st==en) seg[node]=A[st];
else
{
int mid=(st+en)/2;
build(2*node+1,st,mid);             // left branch
build(2*node+2,mid+1,en);            // right branch
seg[node]=seg[2*node+1]+seg[2*node+2];
}
}
void update(int node,int st,int en)
{
if(st==en) seg[node]+=val;
else
{
int mid=(st+en)/2;
if(st<=ind and ind <=mid) update(2*node+1,st,mid);        //recurse on left branch
else update(2*node+2,mid+1,en);                           // recurse on right branch
seg[node]=seg[2*node+1]+seg[2*node+2];
}
}
int query(int node,int st,int en,int l,int r)
{
if(r<st or en<l) return 0;
if(l<=st and en<=r) return seg[node];
int mid=(st+en)/2;
int q1=query(2*node+1,st,mid,l,r);         // left branch
int q2=query(2*node+2,mid+1,en,l,r);       // right branch
return (q1+q2);

}
int main()
{
int n,i,l,r;
cin>>n;
for(i=0;i<n;++i) cin>>A[i];

build(0,0,n-1);                 // n-1 is the last index
for(i=0;i<2*n;++i) cout<<seg[i]<<" ";
cout<<"\n Enter the index and values \n";
cin>>ind>>val;
A[ind]+=val;
update(0,0,n-1);
cout<<"the main array is\n";
for(i=0;i<n;++i) cout<<A[i]<<" ";
cout<<"\nThe segment treee is\n";
for(i=0;i<2*n;++i) cout<<seg[i]<<" ";
cout<<"\n Enter the range of query \n";
cin>>l>>r;
cout<<query(0,0,n-1,l-1,r-1)<<endl;            //0 indexing array

return 0;}
